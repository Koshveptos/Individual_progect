
#include "homeread.h"
//--------------------------------------------------------------------------------------------------------
/**
*   \file homeread.cpp
*   \author Казаков Василий Тимофеевч
*   \version 1.1
*   \date 01.01.2022
*   \todo Следует доработать в функциях работу с fseek, чтобы не читать файл с нуля в каждой функции, а просто поменять указатель в файле..
*   \brief cpp файл, отвечающий за чтение фала "home.txt".
*   \warning Следует учесть, что кодировка файлов  - UTF8, а это значит, что комментарии из функции assert будут отображаться "кракозябрами"
*   поэтому что автор проекта не нашел где в VS поменять кодировку символов при выводе на экран через консоль
*   \details Файл, который содержит в себе функции, отвечающие за получение данных из файла "home.txt" и передачу их в динамический массив структур.
*/
/**
*   \brief Функция получения кол-ва записей о первых двух параметрах дома
*   \details функция получает значение записей о площади дома и колличестве квартир.
*   В главном приложении на основании этих данных создается динамический массив структур, в котором эти данные будут храниться.
*    получает указатель на целое число и записывает в него кол-во записей о ресурсах*
* 
*   
*/
void read_home_file_one(Home* n)
{
    FILE* f = fopen("home.txt", "r");
    assert((f != NULL) && "Файл home.txt не найден, проверьте путь...");
    fscanf(f, "%d %d\n", &n[0].count_flat, &n[0].square_home);
    assert(n[0].count_flat > 0 && n[0].square_home > 0&& "В файле home.txt нет данных о кол-ве квартир");
    fclose(f);
}

/**
*   \brief Функция получения данных о каждой квартире
*   \details функция получает значение записей о площади квартир и колличестве жильцов,получает указатель на целое число и записывает в него кол-во записей о ресурсах
*   также происходит автоматическая индексация каждой квартиры, ей присваивается ее порядковый номер
*   
*/
void read_home_file_two(Flat* n, int count_flat)
{
    FILE* f = fopen("home.txt", "r");
    assert((f != NULL) && "Файл home.txt не найден, проверьте путь...");
    //нужно просто что бы считать первые два элемента , которые будут стерты далее
    int tt, dd;
    fscanf(f, "%d %d", &tt, &dd);
    //не получилось переместиться по файлу с помощью этой функции
    //fseek(f, 2 * sizeof(int), SEEK_SET);
    for (int i = 0; i != (count_flat); i++)
    {
        fscanf(f, "%d %d", &n[i].square_flat, &n[i].count_person);
        assert((n[i].square_flat != 0 || n[i].count_person != 0) && "В файле home.txt нехватает данных о квартирах");
        n[i].ID = i;
    }
    fclose(f);
}
//--------------------------------------------------------------------------------------------------------