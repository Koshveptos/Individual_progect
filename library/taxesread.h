#pragma once
#ifndef _TAXESREAD_H_
#define _TAXESREAD_H_
//-----------------------------------------------------
#include "allheader.h"
/**
*   \file taxesread.h
*	\author Казаков Василий Тимофеевч
*	\version 1.1
*	\date 01.01.2022
*	\brief Заголовочный файл, отвечающий за чтение фала "taxes.txt".
*	\details Заголовочный файл, который содержит в себе тип данных, в который будут передаваться данные из файла,
* а так же два прототипа функции, которые используются для чтения файла.
* *   \warning Следует учесть, что кодировка файлов  - UTF8, а это значит, что комментарии из функции assert будут отображаться "кракозябрами"
*   поэтому что автор проекта не нашел где в VS поменять кодировку символов при выводе на экран через консоль
*/
/**
*   \struct Taxes
*    \brief Структура данных, которая хранит в себе данные о тарифах.
*	\details Структура содержит данные о названии услуги и тарифу оплаты, так же есть резервное поле, суть которого пока неизвестна.
*	\param price переменная, которая хранит данные о цене ресурса
*   \param rezervnoe_pole зарезервированное поле, смысл которого я постигну чуть позже
*	\param name_taxes[6] переменная, которая хранит название ресурса
*/
typedef struct 
{
	int price; ///< Поле структуры - цена ресурса
	int rezervnoe_pole; ///< Поле структуры - зарезервированное поле
	char name_taxes[6]; ///< Поле структуры - название ресурса
}Taxes;
/**
*	\brief Функция получения кол-ва записей о колличестве ресурсов
*   \param[out] *n получает кол-во записей о ресурсах
*	\details получает указатель на целое число и записывает в него кол-во записей о ресурсах
*/
void count_taxes(int* n);
/**
*   \brief Функция записи данных о ресурсах в динамический массив структур
*   \param[out] *n указатель на динамический массив структур
*   \param[in] count_tax передает кол-во записей о ресурсах
*	\details получает данные о кол-ве записей о ресурсах и записывает в динамический массив структур входные данные
*/
void read_taxes_file_all(Taxes* n, int count_tax);
//-----------------------------------------------------
#endif
